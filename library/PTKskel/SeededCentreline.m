% PTKCustomAirwayCentreline by Ashkan Pakzad, 2020. Plugin for finding the centreline of an
% imported Airway segmentation (i.e. other than that generated by PTKAirways).
% Based on PTKAirwayCentreline by Tom Doel, 2012.
%
%
% PTKCustomAirwayCentreline calls the PTKAirways plugin to identify the tree structure
% of the already segmented airways.
% It then uses the PTKSkeletonise library routine to reduce the
% airway tree to a centreline and process it inorder to remove
% internal loops in the airway structure.
%
% The output image is a binary image in the same space as the input
% segmentation.
%
% Licence:
%   Part of the TD Pulmonary Toolkit. https://github.com/tomdoel/pulmonarytoolkit
%   Adapted by Ashkan Pakzad, 2020 ashkanpakzad.github.io
%   Author: Tom Doel, 2012.  www.tomdoel.com
%   Distributed under the GNU GPL v3 licence. Please see website for details.
%


function skel_ptk = SeededCentreline(ptk_main, seg_ptk, seed)
arguments
    ptk_main
    seg_ptk
    seed (3,1)
end

reporting = ptk_main.Reporting;
start_point = seed;

% dummy params
maximum_number_of_generations = 1000;
explosion_multiplier = 1000;
coronal_mode = false;
debug_mode = false;

seg_parsed = PTKAirwayRegionGrowingWithExplosionControl(seg_ptk, start_point, maximum_number_of_generations, explosion_multiplier, coronal_mode, reporting, debug_mode);

% generate skeleton
skeleton_results = PTKGetCentrelineFromAirways(seg_parsed, seg_ptk, reporting);

% convert to binary PTKimage
skelvol = zeros(seg_ptk.ImageSize, 'uint8');
skelvol(seg_ptk.GlobalToLocalIndices(skeleton_results.CentrelinePoints)) = 1;
skelvol(seg_ptk.GlobalToLocalIndices(skeleton_results.BifurcationPoints)) = 1;

skel_ptk = seg_ptk.Copy;
skel_ptk.ChangeRawImage(skelvol);

skel_ptk.SetVoxelToThis(skeleton_results.StartPoint, 1);

end
